{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","resetForm","className","s","form","e","preventDefault","contact","id","uuidv4","label","input","type","value","pattern","title","required","onChange","target","button","Filter","filter","handleFilter","Contact","ContactList","filteredName","deleteContact","map","onClick","App","JSON","parse","window","localStorage","getItem","contactsData","contacts","setContacts","setFilter","useEffect","setItem","stringify","newContact","some","toLowerCase","alert","normalizedFilter","includes","getFilteredName","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18082d9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__-a1TT\",\"input\":\"ContactForm_input__8dUNt\",\"button\":\"ContactForm_button__2k60A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__4zuNd\",\"input\":\"Filter_input__2YhZ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__aKl3S\",\"button\":\"ContactList_button__3RJTx\"};","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    onSubmit(contact);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleNameChange}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleNumberChange}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nexport default function Filter({ filter, handleFilter }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={handleFilter}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Contact({ name, number }) {\n  return (\n    <span>\n      {name}: {number}\n    </span>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Contact from '../Contact';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ filteredName, deleteContact }) {\n  return (\n    <ul>\n      {filteredName.map(({ id, name, number }) => (\n        <li className={s.contact} key={id}>\n          <Contact name={name} number={number} />\n          <button className={s.button} onClick={() => deleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  filteredName: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport contactsData from '../../contactsData/contacts.json';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? contactsData;\n  });\n  const [filter, setFilter] = useState('');\n\n  const handleFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const handleSubmit = newContact => {\n    const contactInPhonebook = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n    );\n\n    if (contactInPhonebook) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      setContacts([...contacts, newContact]);\n    }\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const getFilteredName = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredName = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return filteredName;\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} handleFilter={handleFilter} />\n      <ContactList\n        filteredName={getFilteredName()}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}